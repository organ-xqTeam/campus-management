<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.SchoolSpecialty.mapper.SchoolSpecialtyMapper">
    
    <resultMap type="SchoolSpecialty" id="SchoolSpecialtyResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="belongId"    column="belong_id"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateDate"    column="update_date"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="belongName"    column="belong_name"    />
    </resultMap>

    <sql id="selectSchoolSpecialtyVo">
        select id, name, belong_id, create_date, update_date, del_flag, belong_name from school_specialty
    </sql>

    <select id="selectSchoolSpecialtyList" parameterType="SchoolSpecialty" resultMap="SchoolSpecialtyResult">
        <include refid="selectSchoolSpecialtyVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="belongId != null "> and belong_id = #{belongId}</if>
            <if test="createDate != null "> and create_date = #{createDate}</if>
            <if test="updateDate != null "> and update_date = #{updateDate}</if>
            <if test="belongName != null  and belongName != ''"> and belong_name like concat('%', #{belongName}, '%')</if>
              and del_flag="0"
        </where>
    </select>
    
    <select id="selectSchoolSpecialtyById" parameterType="Long" resultMap="SchoolSpecialtyResult">
        <include refid="selectSchoolSpecialtyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSchoolSpecialty" parameterType="SchoolSpecialty" useGeneratedKeys="true" keyProperty="id">
        insert into school_specialty
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null  and name != ''">name,</if>
            <if test="belongId != null ">belong_id,</if>
            <if test="createDate != null ">create_date,</if>
            <if test="updateDate != null ">update_date,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
            <if test="belongName != null  and belongName != ''">belong_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null  and name != ''">#{name},</if>
            <if test="belongId != null ">#{belongId},</if>
            <if test="createDate != null ">#{createDate},</if>
            <if test="updateDate != null ">#{updateDate},</if>
            <if test="delFlag != null  and delFlag != ''">#{delFlag},</if>
            <if test="belongName != null  and belongName != ''">#{belongName},</if>
         </trim>
    </insert>

    <update id="updateSchoolSpecialty" parameterType="SchoolSpecialty">
        update school_specialty
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="belongId != null ">belong_id = #{belongId},</if>
            <if test="createDate != null ">create_date = #{createDate},</if>
            <!-- <if test="updateDate != null ">update_date = #{updateDate},</if> -->
            <if test="delFlag != null  and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="belongName != null  and belongName != ''">belong_name = #{belongName},</if>
            update_date =now(),
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSchoolSpecialtyById" parameterType="Long">
        delete from school_specialty where id = #{id}
    </delete>

    <delete id="deleteSchoolSpecialtyByIds" parameterType="String">
        delete from school_specialty where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>