<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.schoolResult.mapper.SchoolResultMapper">
    
    <resultMap type="SchoolResult" id="SchoolResultResult">
        <result property="id"    column="id"    />
        <result property="curriculumName"    column="curriculum_name"    />
        <result property="curriculumId"    column="curriculum_id"    />
        <result property="examName"    column="exam_name"    />
        <result property="examId"    column="exam_id"    />
        <result property="examDate"    column="exam_date"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateDate"    column="update_date"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectSchoolResultVo">
        select 
        	id, curriculum_name, curriculum_id, exam_name, exam_id, exam_date, create_date, update_date, del_flag 
        from 
        	school_result
    </sql>

    <select id="selectSchoolResultList" parameterType="SchoolResult" resultMap="SchoolResultResult">
        <include refid="selectSchoolResultVo"/>
        <where>  
            <if test="curriculumName != null  and curriculumName != ''"> and curriculum_name like concat('%', #{curriculumName}, '%')</if>
            <if test="curriculumId != null "> and curriculum_id = #{curriculumId}</if>
            <if test="examName != null  and examName != ''"> and exam_name like concat('%', #{examName}, '%')</if>
            <if test="examId != null "> and exam_id = #{examId}</if>
            <if test="examDate != null "> and exam_date = #{examDate}</if>
            <if test="createDate != null "> and create_date = #{createDate}</if>
            <if test="updateDate != null "> and update_date = #{updateDate}</if>
        </where>
    </select>
    
    <select id="selectSchoolResultList2" parameterType="SchoolResult" resultType="hashmap">
        select
			r.*
            <if test="studentid != null and studentid != ''">
				,(select d.result from school_result_detail d where d.result_id = r.id and d.students_id=#{studentid}) as 'result'
			</if>
		from 
			school_result r
		where 
			1=1
			<if test="studentid != null and studentid != ''">
				and r.id in (select result_id from school_result_detail where students_id=#{studentid})
			</if>			
    </select>
    
	<select id="stulist" resultType="hashmap" parameterType="hashmap">
		select 
			s.id,
			s.students_id AS studentsId,
			s.students_name AS studentsName,
			s.academic_level AS academicLevel,
			s.father_name,
			s.father_phone,
			s.mother_name,
			s.mother_phone,
			s.home_address,
			s._remarks,
			s.ages,
			s.birth,
			s.admission_time AS admissionTime,
			s._state,
			s.del_flag,
			s.deptAlias,
			s.userAlias,
			ifnull( s.grade_id, "" ) AS gradeId,
			ifnull( s.class_id, "" ) AS classId,
			s.ssid,
			s.sbid,
			s.class_id,
			(select nameclass from school_class where id = s.class_id) as 'nameclass',
			(select school_name from school_belong where id = s.sbid) as 'sbname',
			(select `name` from school_specialty where id = s.ssid) as 'ssname'
		from 
			schoolstudentslist s
		where 
			1=1
		<if test="resultId != null and resultId != ''">
			and id not in (select students_id from school_result_detail where result_id = #{resultId})
		</if>
		<if test="ssid != null and ssid != ''">
			and s.ssid = #{ssid}
		</if>
		<if test="sbid != null and sbid != ''">
			and s.sbid = #{sbid}
		</if>
		<if test="classId != null and classId != ''">
			and s.class_id = #{classId}
		</if>
	</select>
    
    <select id="selectSchoolResultById" parameterType="Long" resultMap="SchoolResultResult">
        <include refid="selectSchoolResultVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSchoolResult" parameterType="SchoolResult" useGeneratedKeys="true" keyProperty="id">
        insert into school_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="curriculumName != null  and curriculumName != ''">curriculum_name,</if>
            <if test="curriculumId != null ">curriculum_id,</if>
            <if test="examName != null  and examName != ''">exam_name,</if>
            <if test="examId != null ">exam_id,</if>
            <if test="examDate != null ">exam_date,</if>
            <if test="createDate != null ">create_date,</if>
            <if test="updateDate != null ">update_date,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="curriculumName != null  and curriculumName != ''">#{curriculumName},</if>
            <if test="curriculumId != null ">#{curriculumId},</if>
            <if test="examName != null  and examName != ''">#{examName},</if>
            <if test="examId != null ">#{examId},</if>
            <if test="examDate != null ">#{examDate},</if>
            <if test="createDate != null ">#{createDate},</if>
            <if test="updateDate != null ">#{updateDate},</if>
            <if test="delFlag != null  and delFlag != ''">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateSchoolResult" parameterType="SchoolResult">
        update school_result
        <trim prefix="SET" suffixOverrides=",">
            <if test="curriculumName != null  and curriculumName != ''">curriculum_name = #{curriculumName},</if>
            <if test="curriculumId != null ">curriculum_id = #{curriculumId},</if>
            <if test="examName != null  and examName != ''">exam_name = #{examName},</if>
            <if test="examId != null ">exam_id = #{examId},</if>
            <if test="examDate != null ">exam_date = #{examDate},</if>
            <if test="createDate != null ">create_date = #{createDate},</if>
            <if test="updateDate != null ">update_date = #{updateDate},</if>
            <if test="delFlag != null  and delFlag != ''">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSchoolResultById" parameterType="Long">
        delete from school_result where id = #{id}
    </delete>

    <delete id="deleteSchoolResultByIds" parameterType="String">
        delete from school_result where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>